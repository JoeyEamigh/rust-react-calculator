{"version":3,"sources":["components/loading/loading.tsx","types/operations.enum.ts","components/fourFunc/fourFunc.tsx","types/calculatorType.enum.ts","components/triangle/triangle.tsx","App.tsx","index.tsx"],"names":["Loading","className","Operation","FourFunc","rust","useState","answer","setAnswer","operation","setOperation","prenum","setPrenum","postnum","setPostnum","buffer","setBuffer","onClick","flippedNum","num","Number","Math","abs","toString","dec","percent_decimal","perc","multiply","chooseOperator","DIVIDE","addToBuffer","MULTIPLY","SUBTRACT","ADD","equals","ans","buff","pre","add","subtract","divide","rounded","round_for_calc","operator","newAnswer","CalculatorType","Triangle","App","setRust","dropdownRef","useRef","calculatorType","setCalculatorType","useEffect","Dropdown","current","then","module","type","id","data-bs-toggle","ref","aria-labelledby","href","changeCalculatorType","renderCalculator","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52f96089.chunk.js","sourcesContent":["import './loading.scss';\n\nexport default function Loading() {\n  return (\n    <main className=\"loading-wasm\">\n      <h1>Loading WASM...</h1>\n    </main>\n  );\n}\n","export enum Operation {\n  ADD = '+',\n  SUBTRACT = '-',\n  MULTIPLY = 'x',\n  DIVIDE = 'รท',\n}\n","import './fourFunc.scss';\nimport type * as Rust from '../../native/pkg';\nimport { useState } from 'react';\nimport { Operation } from '../../types/operations.enum';\n\nexport default function FourFunc({ rust }: { rust: typeof Rust }) {\n  const [answer, setAnswer] = useState<number>(0);\n  const [operation, setOperation] = useState<Operation>(null);\n  const [prenum, setPrenum] = useState<number>(null);\n  const [postnum, setPostnum] = useState<number>(null);\n  const [buffer, setBuffer] = useState('');\n\n  return (\n    <main className=\"calculator\">\n      <section className=\"screen\">\n        <span className=\"buffer\">{!!buffer ? buffer : answer}</span>\n        <span className=\"operations\">\n          {prenum} {operation} {postnum} {answer ? ' =' : ''}\n        </span>\n      </section>\n      <section className=\"buttons\">\n        <div onClick={clear}>{buffer ? 'CE' : 'AC'}</div>\n        <div onClick={swapPositivity}>+/-</div>\n        <div onClick={calcPercent}>%</div>\n        <div onClick={() => chooseOperator(Operation.DIVIDE)}>รท</div>\n        <div onClick={() => addToBuffer(7)}>7</div>\n        <div onClick={() => addToBuffer(8)}>8</div>\n        <div onClick={() => addToBuffer(9)}>9</div>\n        <div onClick={() => chooseOperator(Operation.MULTIPLY)}>x</div>\n        <div onClick={() => addToBuffer(4)}>4</div>\n        <div onClick={() => addToBuffer(5)}>5</div>\n        <div onClick={() => addToBuffer(6)}>6</div>\n        <div onClick={() => chooseOperator(Operation.SUBTRACT)}>-</div>\n        <div onClick={() => addToBuffer(1)}>1</div>\n        <div onClick={() => addToBuffer(2)}>2</div>\n        <div onClick={() => addToBuffer(3)}>3</div>\n        <div onClick={() => chooseOperator(Operation.ADD)}>+</div>\n        <div onClick={() => addToBuffer('00')}>00</div>\n        <div onClick={() => addToBuffer(0)}>0</div>\n        <div onClick={() => addToBuffer('.')}>.</div>\n        <div onClick={equals}>=</div>\n      </section>\n    </main>\n  );\n\n  function equals() {\n    if (buffer === 'NO / 0') return;\n    if (!buffer || !prenum) return;\n\n    let ans: number;\n    let buff = Number(buffer);\n    let pre = prenum;\n\n    if (buff === 0 && pre === 0 && operation === Operation.DIVIDE) {\n      setPostnum(0);\n      setBuffer('NO / 0');\n      return;\n    }\n\n    if (!!answer && !!pre && !!postnum) {\n      buff = postnum;\n      pre = answer;\n    }\n\n    switch (operation) {\n      case Operation.ADD:\n        ans = rust.add(pre, buff);\n        break;\n      case Operation.SUBTRACT:\n        ans = rust.subtract(pre, buff);\n        break;\n      case Operation.MULTIPLY:\n        ans = rust.multiply(pre, buff);\n        break;\n      case Operation.DIVIDE:\n        ans = rust.divide(pre, buff);\n        break;\n    }\n\n    const rounded = rust.round_for_calc(ans);\n    setPrenum(pre);\n    setPostnum(buff);\n    setAnswer(rounded);\n    setBuffer('');\n    return rounded;\n  }\n\n  function swapPositivity() {\n    if (!!buffer) {\n      const num = Number(buffer);\n      let flippedNum: number;\n      if (num > 0) {\n        flippedNum = -Math.abs(num);\n      } else {\n        flippedNum = Math.abs(num);\n      }\n\n      setBuffer(flippedNum.toString());\n    }\n  }\n\n  function calcPercent() {\n    if (!!prenum) {\n      const dec = rust.percent_decimal(Number(buffer));\n      const perc = rust.multiply(prenum, dec);\n      setBuffer(perc.toString());\n    } else {\n      setBuffer('');\n    }\n  }\n\n  function chooseOperator(operator: Operation) {\n    if (!!answer) {\n      setOperation(operator);\n      setPrenum(answer);\n      setPostnum(null);\n      setAnswer(null);\n      return;\n    }\n    if (!!buffer && !!prenum) {\n      const newAnswer = equals();\n      setOperation(operator);\n      setPrenum(newAnswer);\n      setPostnum(null);\n      setAnswer(null);\n      return;\n    }\n    if (!!buffer) {\n      setOperation(operator);\n      setPrenum(Number(buffer));\n      setBuffer('');\n      return;\n    }\n    if (!!operation) {\n      setOperation(operator);\n    }\n  }\n\n  function reset() {\n    setPrenum(null);\n    setPostnum(null);\n    setOperation(null);\n    setAnswer(0);\n  }\n\n  function clear() {\n    if (!!buffer) {\n      setBuffer('');\n    } else {\n      reset();\n    }\n  }\n\n  function addToBuffer(num: number | string) {\n    setBuffer(buffer + num);\n  }\n}\n","export enum CalculatorType {\n  FourFunc = 'Four Function',\n  Triangle = 'Triangle',\n}\n","import './triangle.scss';\nimport type * as Rust from '../../native/pkg';\n\nexport default function Triangle({ rust }: { rust: typeof Rust }) {\n  return <main className=\"triangle\">Coming soon...</main>;\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useEffect, useState, useRef } from 'react';\nimport './App.scss';\nimport type * as Rust from './native/pkg/index';\nimport Loading from './components/loading/loading';\nimport FourFunc from './components/fourFunc/fourFunc';\nimport { Dropdown } from 'bootstrap';\nimport { CalculatorType } from './types/calculatorType.enum';\nimport Triangle from './components/triangle/triangle';\n\nfunction App() {\n  const [rust, setRust] = useState<typeof Rust>(null);\n  const dropdownRef = useRef<HTMLButtonElement>();\n  const [calculatorType, setCalculatorType] = useState<CalculatorType>(CalculatorType.FourFunc);\n\n  useEffect(() => {\n    new Dropdown(dropdownRef.current);\n    import('./native/pkg/index').then((module) => setRust(module));\n  }, []);\n\n  return (\n    <main className=\"rusty-calc\">\n      <h1>Rusty Calculator</h1>\n      <div className=\"dropdown\">\n        <button\n          className=\"btn btn-secondary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton1\"\n          data-bs-toggle=\"dropdown\"\n          ref={dropdownRef}\n        >\n          Mode: {calculatorType}\n        </button>\n        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n          <li>\n            <a className=\"dropdown-item\" href=\"#\" onClick={() => changeCalculatorType(CalculatorType.FourFunc)}>\n              {CalculatorType.FourFunc}\n            </a>\n          </li>\n          <li>\n            <a className=\"dropdown-item\" href=\"#\" onClick={() => changeCalculatorType(CalculatorType.Triangle)}>\n              {CalculatorType.Triangle}\n            </a>\n          </li>\n        </ul>\n      </div>\n      {rust ? renderCalculator() : <Loading />}\n    </main>\n  );\n\n  function renderCalculator() {\n    switch (calculatorType) {\n      case CalculatorType.FourFunc:\n        return <FourFunc rust={rust} />;\n      case CalculatorType.Triangle:\n        return <Triangle rust={rust} />;\n      default:\n        return <FourFunc rust={rust} />;\n    }\n  }\n\n  function changeCalculatorType(type: CalculatorType) {\n    setCalculatorType(type);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}